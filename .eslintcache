[{"/Users/ariannajohnson/Desktop/capstone/src/index.js":"1","/Users/ariannajohnson/Desktop/capstone/src/App.js":"2","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Home/index.js":"3","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level1/index.js":"4","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level2/index.js":"5","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level3/index.js":"6","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level4/index.js":"7","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level5/index.js":"8","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level6/index.js":"9","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level7/index.js":"10","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level8/index.js":"11","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level9/index.js":"12","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level10/index.js":"13"},{"size":403,"mtime":1612286038291,"results":"14","hashOfConfig":"15"},{"size":1239,"mtime":1612392408923,"results":"16","hashOfConfig":"15"},{"size":1138,"mtime":1612292615940,"results":"17","hashOfConfig":"15"},{"size":4072,"mtime":1612392408925,"results":"18","hashOfConfig":"15"},{"size":3465,"mtime":1612394661161,"results":"19","hashOfConfig":"15"},{"size":4085,"mtime":1612395896510,"results":"20","hashOfConfig":"15"},{"size":3466,"mtime":1612392408927,"results":"21","hashOfConfig":"15"},{"size":3466,"mtime":1612392408928,"results":"22","hashOfConfig":"15"},{"size":3466,"mtime":1612392408928,"results":"23","hashOfConfig":"15"},{"size":3466,"mtime":1612392408929,"results":"24","hashOfConfig":"15"},{"size":3466,"mtime":1612392408929,"results":"25","hashOfConfig":"15"},{"size":3467,"mtime":1612392408929,"results":"26","hashOfConfig":"15"},{"size":145,"mtime":1612392408925,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ygt8zj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/ariannajohnson/Desktop/capstone/src/index.js",[],["63","64"],"/Users/ariannajohnson/Desktop/capstone/src/App.js",["65"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Home/index.js",["66","67"],"import \"./Home.css\";\nimport {  useHistory } from \"react-router-dom\";\nimport logo from \"../../Media/logo.png\";\nimport homeGraphic from \"../../Media/home-page-graphic.svg\"\n\nfunction Home() {\n    const history = useHistory();\n\n    const routeChange = () =>{\n        let path = '/level_1';\n        history.push(path);\n      }\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-graphics-container\">\n                <img src={logo} className=\"logo\" />\n                <img src={homeGraphic} className=\"home-graphic\" />\n            </div>\n            <div className=\"circle\">\n            <div className=\"circle-contents\">\n            <p className=\"home-text\">\n                        Become a\n                        <br/>\n                        master\n                        <br/>\n                        of CSS with\n                        <br/>\n                        AstroAnimate\n                        <br/>\n                </p>\n                <button className=\"start-game-button\" onClick={routeChange}>Start Game</button>\n            </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Home;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level1/index.js",["68"],"import \"./Level1.css\";\nimport astronaut from \"../../Media/astronaut.svg\";\nimport planet from \"../../Media/new-planet.svg\";\nimport { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport levelLogo from \"../../Media/Level-1.png\";\nimport {  useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: ${rotate2};\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nconst isCollide = (a, b) => {\n  var aRect = a && a.getBoundingClientRect();\n  var bRect = b && b.getBoundingClientRect();\n\n  return (\n    aRect &&\n    bRect &&\n    !(\n      aRect.top + aRect.height < bRect.top ||\n      aRect.top > bRect.top + bRect.height ||\n      aRect.left + aRect.width < bRect.left ||\n      aRect.left > bRect.left + bRect.width\n    )\n  );\n};\n\nfunction Level1() {\n  const [answer_1, setAnswer_1] = useState(\"\");\n  const [isRunning, setIsRunning] = useState(false);\n  const [attemptComplete, setAttemptComplete] = useState(false);\n  const [isCollisionDetected, setIsCollisionDetected] = useState(false);\n\n  const astronautElement = document.getElementById(\"astronaut\");\n  const planetElement = document.getElementById(\"planet\");\n\n  function run() {\n    setAttemptComplete(false);\n    setIsRunning(true);\n    setTimeout(() => {\n      setAttemptComplete(true);\n      setIsCollisionDetected\n      (astronautElement &&\n        planetElement &&\n        isCollide(astronautElement, planetElement));\n    }, 2000)\n  }\n\n  //Brings winner to the next level\n  const history = useHistory();\n  const routeChange = () =>{\n      let path = '/level_2';\n      history.push(path);\n    }\n\n  //If player types in the correct input\n  function youWin() {\n    return (\n      <div>\n        <h1>You are out of this world!</h1>\n        <button onClick={routeChange}>next level</button>\n      </div>\n    )\n  }\n\n  // function notQuite() {\n  //   <div>\n  //     <h1>Oops, not quiet! Click the reset button to try again</h1>\n  //     <button>Get Hint</button>\n  //   </div>\n  // }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={levelLogo} className=\"level-logo\" />\n        <div className=\"input-container\">\n        {isRunning && attemptComplete\n          ? isCollisionDetected\n            ? youWin()\n            : <h1>Oops, not quite! Click the reset button to try again</h1>\n          : null}\n        <h1 className='instructions'>The translate(x,y) CSS function repositions an element in the horizontal and/or vertical directions. <br /> Use transform to help the astronaut discover a new planet.</h1>\n        <CustomizedInput\n          value={answer_1}\n          placeholder=\"translate(x,y)\"\n          onChange={(e) => {\n            setIsRunning(false);\n            setAnswer_1(e.target.value);\n          }}\n        />\n        <StyledButton\n          buttonType=\"run\"\n          onClick={run}\n        >\n          Run\n        </StyledButton>\n        <StyledButton\n          buttonType=\"reset\"\n          onClick={() => {\n            setIsRunning(false);\n            setAnswer_1(\"\");\n          }}\n        >\n          Reset\n        </StyledButton>\n\n        <MyStyledImg\n          id=\"astronaut\"\n          src={astronaut}\n          className=\"App-logo\"\n          myAlt=\"logo\"\n          rotate1={isRunning && answer_1}\n        />\n\n        <MyStyledImg\n          id=\"planet\"\n          src={planet}\n          className=\"App-logo\"\n          myAlt=\"logo\"\n        />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Level1;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level2/index.js",["69"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level3/index.js",["70"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level4/index.js",["71"],"import levelLogo from \"../../Media/Level-4.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level4.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level4() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_5';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level4;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level5/index.js",["72"],"import levelLogo from \"../../Media/Level-5.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level5.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level5() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_6';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level5;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level6/index.js",["73"],"import levelLogo from \"../../Media/Level-6.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level6.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level6() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_7';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level6;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level7/index.js",["74"],"import levelLogo from \"../../Media/Level-7.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level7.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level7() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_8';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level7;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level8/index.js",["75"],"import levelLogo from \"../../Media/Level-8.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level8.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level8() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_9';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level8;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level9/index.js",["76"],"import levelLogo from \"../../Media/Level-9.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level9.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level9() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_10';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level9;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level10/index.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":17,"column":17,"nodeType":"87","endLine":17,"endColumn":52},{"ruleId":"85","severity":1,"message":"86","line":18,"column":17,"nodeType":"87","endLine":18,"endColumn":67},{"ruleId":"85","severity":1,"message":"86","line":106,"column":9,"nodeType":"87","endLine":106,"endColumn":55},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":66,"column":13,"nodeType":"87","endLine":66,"endColumn":59},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]