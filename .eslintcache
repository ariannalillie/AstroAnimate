[{"/Users/ariannajohnson/Desktop/capstone/src/index.js":"1","/Users/ariannajohnson/Desktop/capstone/src/App.js":"2","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Home/index.js":"3","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level1/index.js":"4","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level2/index.js":"5","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level3/index.js":"6","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level4/index.js":"7","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level5/index.js":"8","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level6/index.js":"9","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level7/index.js":"10","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level8/index.js":"11","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level9/index.js":"12","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level10/index.js":"13","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Hint/index.js":"14","/Users/ariannajohnson/Desktop/capstone/src/Utils.js":"15"},{"size":403,"mtime":1612286038291,"results":"16","hashOfConfig":"17"},{"size":1239,"mtime":1612392408923,"results":"18","hashOfConfig":"17"},{"size":1138,"mtime":1612292615940,"results":"19","hashOfConfig":"17"},{"size":4076,"mtime":1612892559721,"results":"20","hashOfConfig":"17"},{"size":4129,"mtime":1612893593170,"results":"21","hashOfConfig":"17"},{"size":4323,"mtime":1612893600715,"results":"22","hashOfConfig":"17"},{"size":6225,"mtime":1612894352333,"results":"23","hashOfConfig":"17"},{"size":3666,"mtime":1612550200213,"results":"24","hashOfConfig":"17"},{"size":3666,"mtime":1612550200214,"results":"25","hashOfConfig":"17"},{"size":3666,"mtime":1612550200214,"results":"26","hashOfConfig":"17"},{"size":3666,"mtime":1612550200215,"results":"27","hashOfConfig":"17"},{"size":3668,"mtime":1612550200215,"results":"28","hashOfConfig":"17"},{"size":145,"mtime":1612392408925,"results":"29","hashOfConfig":"17"},{"size":1391,"mtime":1612891873571,"results":"30","hashOfConfig":"17"},{"size":397,"mtime":1612894348284,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ygt8zj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ariannajohnson/Desktop/capstone/src/index.js",[],["70","71"],"/Users/ariannajohnson/Desktop/capstone/src/App.js",["72"],"import { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Componenets/Home\"\nimport Level1 from \"./Componenets/Level1\";\nimport Level2 from \"./Componenets/Level2\";\nimport Level3 from \"./Componenets/Level3\";\nimport Level4 from \"./Componenets/Level4\";\nimport Level5 from \"./Componenets/Level5\";\nimport Level6 from \"./Componenets/Level6\";\nimport Level7 from \"./Componenets/Level7\";\nimport Level8 from \"./Componenets/Level8\";\nimport Level9 from \"./Componenets/Level9\";\nimport Level10 from \"./Componenets/Level10\";\n\n\nfunction App() {\n  return (\n    <>\n    <Route exact path=\"/\" >\n    <Home />\n  </Route>\n      <Route path=\"/level_1\" >\n      <Level1 />\n    </Route>\n    <Route path=\"/level_2\" >\n      <Level2 />\n    </Route>\n    <Route path=\"/level_3\" >\n      <Level3 />\n    </Route>\n    <Route path=\"/level_4\" >\n      <Level4 />\n    </Route>\n    <Route path=\"/level_5\" >\n      <Level5 />\n    </Route>\n    <Route path=\"/level_6\" >\n      <Level6 />\n    </Route>\n    <Route path=\"/level_7\" >\n      <Level7 />\n    </Route>\n    <Route path=\"/level_8\" >\n      <Level8 />\n    </Route>\n    <Route path=\"/level_9\" >\n      <Level9 />\n    </Route>\n    <Route path=\"/level_10\" >\n      <Level10 />\n    </Route>\n    </>\n  );\n}\n\nexport default App;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Home/index.js",["73","74"],"import \"./Home.css\";\nimport {  useHistory } from \"react-router-dom\";\nimport logo from \"../../Media/logo.png\";\nimport homeGraphic from \"../../Media/home-page-graphic.svg\"\n\nfunction Home() {\n    const history = useHistory();\n\n    const routeChange = () =>{\n        let path = '/level_1';\n        history.push(path);\n      }\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-graphics-container\">\n                <img src={logo} className=\"logo\" />\n                <img src={homeGraphic} className=\"home-graphic\" />\n            </div>\n            <div className=\"circle\">\n            <div className=\"circle-contents\">\n            <p className=\"home-text\">\n                        Become a\n                        <br/>\n                        master\n                        <br/>\n                        of CSS with\n                        <br/>\n                        AstroAnimate\n                        <br/>\n                </p>\n                <button className=\"start-game-button\" onClick={routeChange}>Start Game</button>\n            </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Home;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level1/index.js",["75"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level2/index.js",["76"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level3/index.js",["77","78"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level4/index.js",["79"],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level5/index.js",["80"],"import levelLogo from \"../../Media/Level-5.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level5.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level5() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_6';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n     //If player does not type in the correct input\n     function notQuite() {\n        return (\n        <div>\n          <h1>Oops, not quiet! Click the reset button to try again</h1>\n          <button>Get Hint</button>\n        </div>\n        )\n      }\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : notQuite()\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level5;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level6/index.js",["81"],"import levelLogo from \"../../Media/Level-6.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level6.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level6() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_7';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level6;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level7/index.js",["82"],"import levelLogo from \"../../Media/Level-7.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level7.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level7() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_8';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level7;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level8/index.js",["83"],"import levelLogo from \"../../Media/Level-8.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level8.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level8() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_9';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level8;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level9/index.js",["84"],"import levelLogo from \"../../Media/Level-9.png\";\nimport rocket from \"../../Media/rocket.svg\";\nimport earth from \"../../Media/earth.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useState } from \"react\";\nimport \"./Level9.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst taskAnimation = (rotate1, rotate2) => keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: ${rotate1};\n  }\n`;\n\nconst MyStyledImg = styled.img`\n  src: ${(props) => props.src};\n  classname: ${(props) => props.className};\n  alt: ${(props) => props.myAlt};\n  animation: ${(props) => taskAnimation(props.rotate1, props.rotate2)} 1\n    2s linear;\n  margin: 0.5em;\n`;\n\nconst CustomizedInput = styled.input`\n  display: flex;\n  width: 25%;\n  height: 2em;\n  margin: 0 1em 0 0;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  padding: 1em 1em 2.5em 1em;\n  margin: 0.5em;\n  width: ${(props) => (props.buttonType === \"reset\" ? \"7em\" : \"14em\")};\n  height: 3.2em;\n`;\n\nfunction Level9() {\n    //Brings winner to the next level\n    const history = useHistory();\n    const routeChange = () => {\n        let path = '/level_10';\n        history.push(path);\n    }\n\n    //If player types in the correct input\n    function youWin() {\n        return (\n            <div>\n                <h1>You are out of this world!</h1>\n                <button onClick={routeChange}>next level</button>\n            </div>\n        )\n    }\n\n\n    const [answer_1, setAnswer_1] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n\n    return (\n        <div>\n            <img src={levelLogo} className=\"level-logo\" />\n            <div className=\"input-container\">\n                {isRunning\n                    ? answer_1 === \"rotate(230deg)\"\n                        ? youWin()\n                        : <h1>Oops, not quiet! Click the reset button to try again</h1>\n                    : null}\n                <h1 className='instructions'>The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. <br /> The Rocket is header in the wrong direction. Rotate the rocket 230 degrees to point it back towards earth.</h1>\n                <CustomizedInput\n                    value={answer_1}\n                    placeholder=\"rotate(xdeg)\"\n                    onChange={(e) => {\n                        // setIsRunning(false);\n                        setAnswer_1(e.target.value);\n                    }}\n                />\n\n                <StyledButton\n                    buttonType=\"run\"\n                    onClick={() => {\n                        setIsRunning(true);\n                    }}\n                >\n                    Run\n        </StyledButton>\n                <StyledButton\n                    buttonType=\"reset\"\n                    onClick={() => {\n                        setIsRunning(false);\n                        setAnswer_1(\"\");\n                    }}\n                >\n                    Reset\n        </StyledButton>\n            </div>\n            <MyStyledImg\n                id=\"rocket\"\n                src={rocket}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n                rotate1={isRunning && answer_1}\n            />\n            <MyStyledImg\n                id=\"earth\"\n                src={earth}\n                className=\"App-logo\"\n                myAlt=\"logo\"\n            />\n        </div>\n    )\n}\n\nexport default Level9;\n","/Users/ariannajohnson/Desktop/capstone/src/Componenets/Level10/index.js",[],"/Users/ariannajohnson/Desktop/capstone/src/Componenets/Hint/index.js",[],"/Users/ariannajohnson/Desktop/capstone/src/Utils.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":17,"column":17,"nodeType":"95","endLine":17,"endColumn":52},{"ruleId":"93","severity":1,"message":"94","line":18,"column":17,"nodeType":"95","endLine":18,"endColumn":67},{"ruleId":"93","severity":1,"message":"94","line":110,"column":9,"nodeType":"95","endLine":110,"endColumn":55},{"ruleId":"93","severity":1,"message":"94","line":83,"column":13,"nodeType":"95","endLine":83,"endColumn":59},{"ruleId":"89","severity":1,"message":"96","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":74,"column":13,"nodeType":"95","endLine":74,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":101,"column":13,"nodeType":"95","endLine":101,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":66,"column":13,"nodeType":"95","endLine":66,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":75,"column":13,"nodeType":"95","endLine":75,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":75,"column":13,"nodeType":"95","endLine":75,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":75,"column":13,"nodeType":"95","endLine":75,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":76,"column":13,"nodeType":"95","endLine":76,"endColumn":59},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moon' is defined but never used.","no-global-assign","no-unsafe-negation"]